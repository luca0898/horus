version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: horus_postgres
    environment:
      POSTGRES_USER: horus
      POSTGRES_PASSWORD: horus123
      POSTGRES_DB: horusdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./infra/postgres/init-database.sql:/docker-entrypoint-initdb.d/init-database.sql:ro

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-init:
    image: confluentinc/cp-kafka:7.6.0
    depends_on:
      - kafka
    entrypoint: [ "/bin/sh", "-c" ]
    command: |
      "
      echo 'Aguardando Kafka iniciar...' &&
      sleep 10 &&
      kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic horus.drone.telemetry --partitions 1 --replication-factor 1 &&
      kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic horus.drone.events --partitions 1 --replication-factor 1 &&
      kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic horus.system.alerts --partitions 1 --replication-factor 1 &&
      echo 'TÃ³picos Kafka criados.'
      "
    restart: "no"

  horus-worker:
    build:
      context: .
      dockerfile: worker/Presentation/Horus.Worker/Dockerfile
    container_name: horus_worker
    depends_on:
      - kafka
      - postgres
      - kafka-init
    environment:
      ConnectionStrings__DefaultConnection: Host=postgres;Port=5432;Database=horusdb;Username=horus;Password=horus123
      Kafka__BootstrapServers: kafka:9092
    restart: on-failure

volumes:
  pgdata:
